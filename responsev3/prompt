prompt = [
            {
                "role": "system",
                "content": """
            Você é um modelo especializado em programação competitiva. Sua tarefa é interpretar enunciados de problemas
            computacionais, implementar soluções corretas e gerar casos de teste válidos, diversificados e relevantes,
            garantindo conformidade total com as especificações do problema.
        """,
            },
            {
                "role": "user",
                "content": f"""
            Considere o seguinte problema de programação competitiva:

            <enunciado>: "{questao['enunciado']}"
            <entrada>: "{questao['entrada']}"
            <saida>: "{questao['saida']}"
            <casos_de_exemplo>: "{questao['casos_exemplo']}"

            **Tarefa 1:** Com base no <enunciado>, analise e identifique:
            - Todas as regras explícitas descritas no problema.
            - Todas as regras implícitas que podem ser inferidas do contexto ou exemplos fornecidos.
            - Condições excepcionais que podem impactar a lógica, como limites de entrada, casos extremos ou
              comportamentos fronteiriços.

            Ao analisar, preste atenção em **nuances lógicas**, como:
            - Sequência de operações que devem ser aplicadas de forma específica.
            - Regras condicionais que dependem de características da entrada.
            - Diferenças entre processamento total (global) e individual (local) de elementos.

            **Tarefa 2:** Valide a sua análise utilizando os <casos_de_exemplo> fornecidos. Os <casos_de_exemplo> estarão
            sempre corretos. Se a sua análise produzir resultados diferentes dos esperados, sua análise estará errada.
            Se a sua análise estiver errada, utilize outra abordagem para analisar o problema.
            Valide a sua análise novamente com os <casos_de_exemplo> até que você esteja confiante de que a sua análise
            está correta, ou seja, que a sua análise produz os resultados esperados para os <casos_de_exemplo>.


            **Tarefa 3:** Gere 15 novos casos de teste com base no seguinte critério:
            - **Casos Simples:** Entradas mínimas para validar funcionalidades básicas.
            - **Casos Médios:** Entradas intermediárias que testam cenários mais comuns.
            - **Casos Complexos:** Entradas que atingem o limite máximo permitido pelo problema.
            - **Casos Especiais:** Entradas que explorem nuances do problema, como padrões inusitados ou condições
              fronteiriças, exemplo: casos que podem falhar devido a restrições implícitas.

            Para cada caso, calcule a saída utilizando sua análise. Garanta que:
            - As entradas sigam rigorosamente o formato descrito no <enunciado>.
            - As saídas correspondam ao comportamento esperado para as entradas geradas.

            **Tarefa 4:** Valide os casos de teste gerados submetendo os casos à sua análise. Certifique-se de que:
            - **Diversidade:** Os casos cobrem uma ampla gama de cenários e restrições.
            - **Relevância:** Exploraram nuances específicas e condições críticas do problema.
            - **Cobertura:** Testam todas as possíveis saídas esperadas.

            **Formato para os Casos de Teste Gerados:**
            - Apresente cada caso de teste no formato especificado abaixo:
            Entrada:
            [Dados de entrada]
            Saída:
            [Resultado esperado]

            Apenas continue quando tiver certeza de que:
            1. A implementação está correta e validada.
            2. Os casos de teste gerados são válidos e cobrem todas as condições descritas no problema.
        """,
            },
        ]