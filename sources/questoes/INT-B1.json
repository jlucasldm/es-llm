{"nome": "Yoda seleciona padawans",
  "codigo": "INT-B1",
  "enunciado": " Há muito tempo atrás, em\n uma galáxia muito muito distante,\n o império do mal estava\n aumentando sua força, destruindo\n tudo em seu caminho. Mas os\n rebeldes não têm medo, ao lado\n negro da força eles nunca vão se\n juntar. Uma esperança ainda\n existe. \nYoda voa entre as estrelas na velocidade da luz para ensinar os jovens Jedi.\n Parabéns, você nível subiu! Agora você pode mestre Jedi ser. Ajudar Mestre Yoda a\n percorrer a galáxia você precisa. Ajude Mestre Yoda a selecionar novos padawans.",
  "entrada": "A primeira linha contém um inteiro ‘N’ (1 ≤ N ≤ 103) que é a quantidade de jovens\n de todas as partes da galáxia interessados em ser um jovem Jedi. A seguir serão dadas\n ‘N’ linhas, onde em cada uma serão dados uma string (no máximo 5 caracteres\n alfabéticos maiúsculos, sem espaço), um inteiro ‘M’ (1 <= M <= 100) e um inteiro ‘P’ (0\n <= P <= 100), que representam respectivamente, o nome do jovem Jedi, o número de\n missões que lhe foram atribuídas inicialmente, e o número de missões que esse jovem\n Jedi deixou de cumprir em relação ao total que lhe foi atribuído.",
  "saida": "Imprima em ordem crescente os nomes dos Padawans, com seus respectivos\n números de missões completadas. Imprima um jovem Jedi por linha. Saiba que não há\n nomes repetidos.",
  "casos_exemplo": [{"entrada": " 4\n ABCDE 4 2\n BCDEF 5 2\n CDEFG 4 1\n BEFGH 4 0 ", "saida": "ABCDE 2\n BCDEF 3\n BEFGH 4\n CDEFG 3"}, {"entrada": "3\n ABCDE 3 3\n BCDEF 2 0\n ABCDF 3 2", "saida": "ABCDE 0\n ABCDF 1\n BCDEF 2"}],
  "resolucao": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <iterator>\nusing namespace std;\n\nstruct jedi\n{\n    string nome;\n    int missoes_atribuidas;\n    int missoes_nao_cumpridas;\n};\n\nbool cmp_jedi(jedi a, jedi b){\n    return a.nome < b.nome;\n}\n\nint main(){\n    int n; // quantidade de jovens de todas as partes da galáxia interessados em ser um jovem jedi\n    vector<jedi> jovens_jedi; // vetor que armazena os jovens jedi\n\n    cin >> n;\n\n    for(int i=0; i<n; i++){\n        jedi j;\n        cin >> j.nome >> j.missoes_atribuidas >> j.missoes_nao_cumpridas;\n        jovens_jedi.push_back(j);\n    }\n\n    stable_sort(jovens_jedi.begin(), jovens_jedi.end(), cmp_jedi);\n\n    for(vector<jedi>::iterator it = jovens_jedi.begin(); it != jovens_jedi.end(); it++){\n        cout << it->nome << \" \" << it->missoes_atribuidas - it->missoes_nao_cumpridas << endl;\n    }\n}"
}