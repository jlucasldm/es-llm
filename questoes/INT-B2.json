{"nome": "Dark Spoiler",
  "codigo": "INT-B2",
  "enunciado": "Se você ainda pretende\n assistir à 1ª temporada da\n série da Netflix “Dark”, pule\n para o próximo problema. \nJonas Kahnwald é um\n viajante do tempo que\n desempenha um papel\n muito importante ao longo\n da história da cidade de\n Winden.\n Como o tempo não\n passa de maneira linear\n pra Jonas, às vezes fica\n difícil para que ele consiga\n se situar temporalmente.\n Por conta disso, Jonas\n viajou até o nosso “presente” e solicitou sua ajuda na organização de algumas linhas do\n tempo.\n Sua tarefa é implementar um programa que, dado um conjunto de datas – no formato\n dia-mês-ano – retorna uma lista destas datas em ordem crescente.",
  "entrada": " A entrada é composta por várias linhas, terminando em EOF1. Cada linha da entrada\n contém 3 inteiros D, M e A, respectivamente, o dia, mês e ano que compõem uma data a\n ser ordenada",
  "saida": "Seu programa deve imprimir o mesmo número de linhas da entrada, onde a i-ésima\n linha contém os inteiros D, M e A que representam a i-ésima data.",
  "casos_exemplo": [{"entrada": "21 6 2019\n 9 10 1986\n 22 10 2019\n 4 11 2019", "saida": "9 10 1986\n 21 6 2019\n 22 10 2019\n 4 11 2019"}, {"entrada": " 10 11 1953\n 9 11 2019\n 12 11 1986\n 10 11 1986\n 11 11 1953\n 11 11 1986\n 11 11 2019", "saida": " 10 11 1953\n 11 11 1953\n 10 11 1986\n 11 11 1986\n 12 11 1986\n 9 11 2019\n 11 11 2019"}],
  "resolucao": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <iterator>\nusing namespace std;\n\nstruct evento\n{\n    int dia;\n    int mes;\n    int ano;\n};\n\nbool cmp_evento(evento a, evento b){\n    if(a.ano != b.ano){\n        return a.ano < b.ano;\n    }else if(a.mes != b.mes){\n        return a.mes < b.mes;\n    }else{\n        return a.dia < b.dia;\n    }\n}\n\n\nint main(){\n    vector<evento> eventos;\n    int d;\n    int m;\n    int a;\n    \n    while(cin >> d >> m >> a){\n        evento e;\n        e.dia = d;\n        e.mes = m;\n        e.ano = a;\n        eventos.push_back(e);\n    }\n\n    stable_sort(eventos.begin(), eventos.end(), cmp_evento);\n\n    for(vector<evento>::iterator it = eventos.begin(); it != eventos.end(); it++){\n        cout << it->dia << \" \" << it->mes << \" \" << it->ano << endl;\n    }\n}"
}