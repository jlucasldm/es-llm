{"nome": "Ori and the Blind Forest 2",
  "codigo": "INT-A2",
  "enunciado": "\"Ori \nOri and the Blind Forest 2\n And The\n Blind Forest\" conta a\n história de Ori, um\n espírito \nmaterializado\n que foi adotado por\n Naru, uma espécie de\n urso que há muito\n tempo vivia em uma\n f\n loresta encantada. Mas\n infelizmente ocorre a\n morte de Naru. Ori se\n vê \nsozinho \nimensidão \nverde \nna\n e\n assume a responsabilidade de explorar a floresta para sobreviver.\n Uma nova versão do jogo está quase completa, faltando apenas\n implementar uma verificação dos valores de XP obtidos por Ori para saber\n se ele consegue subir de nível. Sua tarefa será dizer se Ori conseguiu passar\n de nível, sendo que para isso lhe será dado o XP obtido por ele em cada\n missão que ele cumpriu, e além disso, será dada uma pontuação bônus para\n cada missão, onde cada bônus será multiplicado pela pontuação obtida\n naquela missão.",
  "entrada": "A primeira linha contém um inteiro ‘N’ (1 <= N <= 100),\n representando a quantidade de missões cumpridas por Ori em determinado\n mapa de fase. Na linha seguinte serão dados ‘N’ inteiros ‘X’ (1 <= X <=\n 10), que representam o XP de cada missão. Na próxima linha serão dados\n ‘N’ inteiros ‘B’ (1 <= B <= 5), que representam o bônus que deve ser\n multiplicado pela pontuação da respectiva missão. Ou seja, o primeiro valor\n de bônus dado, será multiplicado pelo XP da primeira missão, o segundo\n valor de bônus será multiplicado pelo XP da segunda missão, e assim\n sucessivamente. Por fim, na última linha, será dado um inteiro ‘M’ (1 <= M\n <= 10000), representando o total de XP necessário para subir de nível,\n seguido de um inteiro ‘A’ (0 <= A <= 2), representando um bônus\n adicional que deve ser somado a cada bônus ‘B’ antes destes serem\n multiplicados pelos respectivos XP de cada missão.",
  "saida": "Você deverá imprimir “Upou de Nivel!”, se o total de XP for maior\n ou igual a quantidade ‘M’ necessária para upar de nível, ou “Nao foi dessa\n vez!”, caso contrário.",
  "casos_exemplo": [{"entrada": "5\n 1 2 3 4 5\n 1 1 1 1 1\n 16 1", "saida": " Upou de Nivel!"}, {"entrada": "4\n 10 15 10 5\n 1 2 3 4\n 100 0", "saida": "Nao foi dessa vez!"}],
  "resolucao": "#include <iostream>\n#include <vector>\n#include <iterator>\nusing namespace std;\n\nint main(){\n    int n; // quantidade de missões cumpridas por Ori em determinado mapa de fase\n    vector<int> bonus; // vetor que armazena os bônus que devem ser multiplicados pela pontuação da respectiva missão\n    vector<int> pontuacao; // vetor que armazena a pontuação de cada missão\n    int m; // total de XP necessário para subir de nível\n    int a; //bonus adicional a ser somado a cada bonus b\n    int xp_total = 0;\n\n    cin >> n;\n\n    for(int i=0; i<n; i++){\n        int b;\n        cin >> b;\n        bonus.push_back(b);\n    }\n\n    for(int i=0; i<n; i++){\n        int p;\n        cin >> p;\n        pontuacao.push_back(p);\n    }\n\n    cin >> m >> a;\n\n    for(int i=0; i<n; i++){\n        xp_total += (pontuacao[i] + a) * bonus[i];\n    }\n\n    if(xp_total >= m){\n        cout << \"Upou de Nivel!\";\n    }else{\n        cout << \"Nao foi dessa vez!\";\n    }\n}"
}